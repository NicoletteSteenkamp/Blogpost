{"ast":null,"code":"/*! @license DOMPurify 3.0.9 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.0.9/LICENSE */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.DOMPurify = factory());\n})(this, function () {\n  'use strict';\n\n  const {\n    entries,\n    setPrototypeOf,\n    isFrozen,\n    getPrototypeOf,\n    getOwnPropertyDescriptor\n  } = Object;\n  let {\n    freeze,\n    seal,\n    create\n  } = Object; // eslint-disable-line import/no-mutable-exports\n\n  let {\n    apply,\n    construct\n  } = typeof Reflect !== 'undefined' && Reflect;\n\n  if (!freeze) {\n    freeze = function freeze(x) {\n      return x;\n    };\n  }\n\n  if (!seal) {\n    seal = function seal(x) {\n      return x;\n    };\n  }\n\n  if (!apply) {\n    apply = function apply(fun, thisValue, args) {\n      return fun.apply(thisValue, args);\n    };\n  }\n\n  if (!construct) {\n    construct = function construct(Func, args) {\n      return new Func(...args);\n    };\n  }\n\n  const arrayForEach = unapply(Array.prototype.forEach);\n  const arrayPop = unapply(Array.prototype.pop);\n  const arrayPush = unapply(Array.prototype.push);\n  const stringToLowerCase = unapply(String.prototype.toLowerCase);\n  const stringToString = unapply(String.prototype.toString);\n  const stringMatch = unapply(String.prototype.match);\n  const stringReplace = unapply(String.prototype.replace);\n  const stringIndexOf = unapply(String.prototype.indexOf);\n  const stringTrim = unapply(String.prototype.trim);\n  const objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\n  const regExpTest = unapply(RegExp.prototype.test);\n  const typeErrorCreate = unconstruct(TypeError);\n  /**\n   * Creates a new function that calls the given function with a specified thisArg and arguments.\n   *\n   * @param {Function} func - The function to be wrapped and called.\n   * @returns {Function} A new function that calls the given function with a specified thisArg and arguments.\n   */\n\n  function unapply(func) {\n    return function (thisArg) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return apply(func, thisArg, args);\n    };\n  }\n  /**\n   * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n   *\n   * @param {Function} func - The constructor function to be wrapped and called.\n   * @returns {Function} A new function that constructs an instance of the given constructor function with the provided arguments.\n   */\n\n\n  function unconstruct(func) {\n    return function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return construct(func, args);\n    };\n  }\n  /**\n   * Add properties to a lookup table\n   *\n   * @param {Object} set - The set to which elements will be added.\n   * @param {Array} array - The array containing elements to be added to the set.\n   * @param {Function} transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n   * @returns {Object} The modified set with added elements.\n   */\n\n\n  function addToSet(set, array) {\n    let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n\n    if (setPrototypeOf) {\n      // Make 'in' and truthy checks like Boolean(set.constructor)\n      // independent of any properties defined on Object.prototype.\n      // Prevent prototype setters from intercepting set as a this value.\n      setPrototypeOf(set, null);\n    }\n\n    let l = array.length;\n\n    while (l--) {\n      let element = array[l];\n\n      if (typeof element === 'string') {\n        const lcElement = transformCaseFunc(element);\n\n        if (lcElement !== element) {\n          // Config presets (e.g. tags.js, attrs.js) are immutable.\n          if (!isFrozen(array)) {\n            array[l] = lcElement;\n          }\n\n          element = lcElement;\n        }\n      }\n\n      set[element] = true;\n    }\n\n    return set;\n  }\n  /**\n   * Clean up an array to harden against CSPP\n   *\n   * @param {Array} array - The array to be cleaned.\n   * @returns {Array} The cleaned version of the array\n   */\n\n\n  function cleanArray(array) {\n    for (let index = 0; index < array.length; index++) {\n      const isPropertyExist = objectHasOwnProperty(array, index);\n\n      if (!isPropertyExist) {\n        array[index] = null;\n      }\n    }\n\n    return array;\n  }\n  /**\n   * Shallow clone an object\n   *\n   * @param {Object} object - The object to be cloned.\n   * @returns {Object} A new object that copies the original.\n   */\n\n\n  function clone(object) {\n    const newObject = create(null);\n\n    for (const [property, value] of entries(object)) {\n      const isPropertyExist = objectHasOwnProperty(object, property);\n\n      if (isPropertyExist) {\n        if (Array.isArray(value)) {\n          newObject[property] = cleanArray(value);\n        } else if (value && typeof value === 'object' && value.constructor === Object) {\n          newObject[property] = clone(value);\n        } else {\n          newObject[property] = value;\n        }\n      }\n    }\n\n    return newObject;\n  }\n  /**\n   * This method automatically checks if the prop is function or getter and behaves accordingly.\n   *\n   * @param {Object} object - The object to look up the getter function in its prototype chain.\n   * @param {String} prop - The property name for which to find the getter function.\n   * @returns {Function} The getter function found in the prototype chain or a fallback function.\n   */\n\n\n  function lookupGetter(object, prop) {\n    while (object !== null) {\n      const desc = getOwnPropertyDescriptor(object, prop);\n\n      if (desc) {\n        if (desc.get) {\n          return unapply(desc.get);\n        }\n\n        if (typeof desc.value === 'function') {\n          return unapply(desc.value);\n        }\n      }\n\n      object = getPrototypeOf(object);\n    }\n\n    function fallbackValue() {\n      return null;\n    }\n\n    return fallbackValue;\n  }\n\n  const html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']); // SVG\n\n  const svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\n  const svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']); // List of SVG elements that are disallowed by default.\n  // We still need to know them so that we can do namespace\n  // checks properly in case one wants to add them to\n  // allow-list.\n\n  const svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\n  const mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']); // Similarly to SVG, we want to know all MathML elements,\n  // even those that we disallow by default.\n\n  const mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\n  const text = freeze(['#text']);\n  const html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns', 'slot']);\n  const svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n  const mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n  const xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']); // eslint-disable-next-line unicorn/better-regex\n\n  const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n\n  const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\n  const TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\n  const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\n\n  const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n\n  const IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n  );\n  const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\n  const ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n  );\n  const DOCTYPE_NAME = seal(/^html$/i);\n  var EXPRESSIONS = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    MUSTACHE_EXPR: MUSTACHE_EXPR,\n    ERB_EXPR: ERB_EXPR,\n    TMPLIT_EXPR: TMPLIT_EXPR,\n    DATA_ATTR: DATA_ATTR,\n    ARIA_ATTR: ARIA_ATTR,\n    IS_ALLOWED_URI: IS_ALLOWED_URI,\n    IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE: ATTR_WHITESPACE,\n    DOCTYPE_NAME: DOCTYPE_NAME\n  });\n\n  const getGlobal = function getGlobal() {\n    return typeof window === 'undefined' ? null : window;\n  };\n  /**\n   * Creates a no-op policy for internal use only.\n   * Don't export this function outside this module!\n   * @param {TrustedTypePolicyFactory} trustedTypes The policy factory.\n   * @param {HTMLScriptElement} purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n   * @return {TrustedTypePolicy} The policy created (or null, if Trusted Types\n   * are not supported or creating the policy failed).\n   */\n\n\n  const _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n    if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n      return null;\n    } // Allow the callers to control the unique policy name\n    // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n    // Policy creation with duplicate names throws in Trusted Types.\n\n\n    let suffix = null;\n    const ATTR_NAME = 'data-tt-policy-suffix';\n\n    if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n      suffix = purifyHostElement.getAttribute(ATTR_NAME);\n    }\n\n    const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n    try {\n      return trustedTypes.createPolicy(policyName, {\n        createHTML(html) {\n          return html;\n        },\n\n        createScriptURL(scriptUrl) {\n          return scriptUrl;\n        }\n\n      });\n    } catch (_) {\n      // Policy creation failed (most likely another DOMPurify script has\n      // already run). Skip creating the policy, as this will only cause errors\n      // if TT are enforced.\n      console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n      return null;\n    }\n  };\n\n  function createDOMPurify() {\n    let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n\n    const DOMPurify = root => createDOMPurify(root);\n    /**\n     * Version label, exposed for easier checks\n     * if DOMPurify is up to date or not\n     */\n\n\n    DOMPurify.version = '3.0.9';\n    /**\n     * Array of elements that DOMPurify removed during sanitation.\n     * Empty if nothing was removed.\n     */\n\n    DOMPurify.removed = [];\n\n    if (!window || !window.document || window.document.nodeType !== 9) {\n      // Not running in a browser, provide a factory function\n      // so that you can pass your own Window\n      DOMPurify.isSupported = false;\n      return DOMPurify;\n    }\n\n    let {\n      document\n    } = window;\n    const originalDocument = document;\n    const currentScript = originalDocument.currentScript;\n    const {\n      DocumentFragment,\n      HTMLTemplateElement,\n      Node,\n      Element,\n      NodeFilter,\n      NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n      HTMLFormElement,\n      DOMParser,\n      trustedTypes\n    } = window;\n    const ElementPrototype = Element.prototype;\n    const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n    const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n    const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n    const getParentNode = lookupGetter(ElementPrototype, 'parentNode'); // As per issue #47, the web-components registry is inherited by a\n    // new document created via createHTMLDocument. As per the spec\n    // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n    // a new empty registry is used when creating a template contents owner\n    // document, so we use that as our parent document to ensure nothing\n    // is inherited.\n\n    if (typeof HTMLTemplateElement === 'function') {\n      const template = document.createElement('template');\n\n      if (template.content && template.content.ownerDocument) {\n        document = template.content.ownerDocument;\n      }\n    }\n\n    let trustedTypesPolicy;\n    let emptyHTML = '';\n    const {\n      implementation,\n      createNodeIterator,\n      createDocumentFragment,\n      getElementsByTagName\n    } = document;\n    const {\n      importNode\n    } = originalDocument;\n    let hooks = {};\n    /**\n     * Expose whether this browser supports running the full DOMPurify.\n     */\n\n    DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n    const {\n      MUSTACHE_EXPR,\n      ERB_EXPR,\n      TMPLIT_EXPR,\n      DATA_ATTR,\n      ARIA_ATTR,\n      IS_SCRIPT_OR_DATA,\n      ATTR_WHITESPACE\n    } = EXPRESSIONS;\n    let {\n      IS_ALLOWED_URI: IS_ALLOWED_URI$1\n    } = EXPRESSIONS;\n    /**\n     * We consider the elements and attributes below to be safe. Ideally\n     * don't add any new ones but feel free to remove unwanted ones.\n     */\n\n    /* allowed element names */\n\n    let ALLOWED_TAGS = null;\n    const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n    /* Allowed attribute names */\n\n    let ALLOWED_ATTR = null;\n    const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n    /*\n     * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n     * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n     * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n     * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n     */\n\n    let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false\n      }\n    }));\n    /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n\n    let FORBID_TAGS = null;\n    /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n\n    let FORBID_ATTR = null;\n    /* Decide if ARIA attributes are okay */\n\n    let ALLOW_ARIA_ATTR = true;\n    /* Decide if custom data attributes are okay */\n\n    let ALLOW_DATA_ATTR = true;\n    /* Decide if unknown protocols are okay */\n\n    let ALLOW_UNKNOWN_PROTOCOLS = false;\n    /* Decide if self-closing tags in attributes are allowed.\n     * Usually removed due to a mXSS issue in jQuery 3.0 */\n\n    let ALLOW_SELF_CLOSE_IN_ATTR = true;\n    /* Output should be safe for common template engines.\n     * This means, DOMPurify removes data attributes, mustaches and ERB\n     */\n\n    let SAFE_FOR_TEMPLATES = false;\n    /* Decide if document with <html>... should be returned */\n\n    let WHOLE_DOCUMENT = false;\n    /* Track whether config is already set on this instance of DOMPurify. */\n\n    let SET_CONFIG = false;\n    /* Decide if all elements (e.g. style, script) must be children of\n     * document.body. By default, browsers might move them to document.head */\n\n    let FORCE_BODY = false;\n    /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n     * string (or a TrustedHTML object if Trusted Types are supported).\n     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n     */\n\n    let RETURN_DOM = false;\n    /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n     * string  (or a TrustedHTML object if Trusted Types are supported) */\n\n    let RETURN_DOM_FRAGMENT = false;\n    /* Try to return a Trusted Type object instead of a string, return a string in\n     * case Trusted Types are not supported  */\n\n    let RETURN_TRUSTED_TYPE = false;\n    /* Output should be free from DOM clobbering attacks?\n     * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n     */\n\n    let SANITIZE_DOM = true;\n    /* Achieve full DOM Clobbering protection by isolating the namespace of named\n     * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n     *\n     * HTML/DOM spec rules that enable DOM Clobbering:\n     *   - Named Access on Window (§7.3.3)\n     *   - DOM Tree Accessors (§3.1.5)\n     *   - Form Element Parent-Child Relations (§4.10.3)\n     *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n     *   - HTMLCollection (§4.2.10.2)\n     *\n     * Namespace isolation is implemented by prefixing `id` and `name` attributes\n     * with a constant string, i.e., `user-content-`\n     */\n\n    let SANITIZE_NAMED_PROPS = false;\n    const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n    /* Keep element content when removing element? */\n\n    let KEEP_CONTENT = true;\n    /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n     * of importing it into a new Document and returning a sanitized copy */\n\n    let IN_PLACE = false;\n    /* Allow usage of profiles like html, svg and mathMl */\n\n    let USE_PROFILES = {};\n    /* Tags to ignore content of when KEEP_CONTENT is true */\n\n    let FORBID_CONTENTS = null;\n    const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n    /* Tags that are safe for data: URIs */\n\n    let DATA_URI_TAGS = null;\n    const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n    /* Attributes safe for values like \"javascript:\" */\n\n    let URI_SAFE_ATTRIBUTES = null;\n    const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n    const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n    const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n    const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n    /* Document namespace */\n\n    let NAMESPACE = HTML_NAMESPACE;\n    let IS_EMPTY_INPUT = false;\n    /* Allowed XHTML+XML namespaces */\n\n    let ALLOWED_NAMESPACES = null;\n    const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n    /* Parsing of strict XHTML documents */\n\n    let PARSER_MEDIA_TYPE = null;\n    const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n    const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n    let transformCaseFunc = null;\n    /* Keep a reference to config to pass to hooks */\n\n    let CONFIG = null;\n    /* Ideally, do not touch anything below this line */\n\n    /* ______________________________________________ */\n\n    const formElement = document.createElement('form');\n\n    const isRegexOrFunction = function isRegexOrFunction(testValue) {\n      return testValue instanceof RegExp || testValue instanceof Function;\n    };\n    /**\n     * _parseConfig\n     *\n     * @param  {Object} cfg optional config literal\n     */\n    // eslint-disable-next-line complexity\n\n\n    const _parseConfig = function _parseConfig() {\n      let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (CONFIG && CONFIG === cfg) {\n        return;\n      }\n      /* Shield configuration object from tampering */\n\n\n      if (!cfg || typeof cfg !== 'object') {\n        cfg = {};\n      }\n      /* Shield configuration object from prototype pollution */\n\n\n      cfg = clone(cfg);\n      PARSER_MEDIA_TYPE = // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE; // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n\n      transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n      /* Set configuration parameters */\n\n      ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n      ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n      ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n      URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), // eslint-disable-line indent\n      cfg.ADD_URI_SAFE_ATTR, // eslint-disable-line indent\n      transformCaseFunc // eslint-disable-line indent\n      ) // eslint-disable-line indent\n      : DEFAULT_URI_SAFE_ATTRIBUTES;\n      DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS), // eslint-disable-line indent\n      cfg.ADD_DATA_URI_TAGS, // eslint-disable-line indent\n      transformCaseFunc // eslint-disable-line indent\n      ) // eslint-disable-line indent\n      : DEFAULT_DATA_URI_TAGS;\n      FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n      FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n      FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n      USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\n      ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n\n      ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n\n      ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n\n      ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n\n      SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n\n      WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n\n      RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n\n      RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n\n      RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n\n      FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n\n      SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n\n      SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n\n      KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n\n      IN_PLACE = cfg.IN_PLACE || false; // Default false\n\n      IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n      NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n      CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n        CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n      }\n\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n        CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n      }\n\n      if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n        CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n      }\n\n      if (SAFE_FOR_TEMPLATES) {\n        ALLOW_DATA_ATTR = false;\n      }\n\n      if (RETURN_DOM_FRAGMENT) {\n        RETURN_DOM = true;\n      }\n      /* Parse profile info */\n\n\n      if (USE_PROFILES) {\n        ALLOWED_TAGS = addToSet({}, text);\n        ALLOWED_ATTR = [];\n\n        if (USE_PROFILES.html === true) {\n          addToSet(ALLOWED_TAGS, html$1);\n          addToSet(ALLOWED_ATTR, html);\n        }\n\n        if (USE_PROFILES.svg === true) {\n          addToSet(ALLOWED_TAGS, svg$1);\n          addToSet(ALLOWED_ATTR, svg);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n\n        if (USE_PROFILES.svgFilters === true) {\n          addToSet(ALLOWED_TAGS, svgFilters);\n          addToSet(ALLOWED_ATTR, svg);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n\n        if (USE_PROFILES.mathMl === true) {\n          addToSet(ALLOWED_TAGS, mathMl$1);\n          addToSet(ALLOWED_ATTR, mathMl);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n      }\n      /* Merge configuration parameters */\n\n\n      if (cfg.ADD_TAGS) {\n        if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n          ALLOWED_TAGS = clone(ALLOWED_TAGS);\n        }\n\n        addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n      }\n\n      if (cfg.ADD_ATTR) {\n        if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n          ALLOWED_ATTR = clone(ALLOWED_ATTR);\n        }\n\n        addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n      }\n\n      if (cfg.ADD_URI_SAFE_ATTR) {\n        addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n      }\n\n      if (cfg.FORBID_CONTENTS) {\n        if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n          FORBID_CONTENTS = clone(FORBID_CONTENTS);\n        }\n\n        addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n      }\n      /* Add #text in case KEEP_CONTENT is set to true */\n\n\n      if (KEEP_CONTENT) {\n        ALLOWED_TAGS['#text'] = true;\n      }\n      /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n\n\n      if (WHOLE_DOCUMENT) {\n        addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n      }\n      /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n\n\n      if (ALLOWED_TAGS.table) {\n        addToSet(ALLOWED_TAGS, ['tbody']);\n        delete FORBID_TAGS.tbody;\n      }\n\n      if (cfg.TRUSTED_TYPES_POLICY) {\n        if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n          throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n        }\n\n        if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n          throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n        } // Overwrite existing TrustedTypes policy.\n\n\n        trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY; // Sign local variables required by `sanitize`.\n\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      } else {\n        // Uninitialized policy, attempt to initialize the internal dompurify policy.\n        if (trustedTypesPolicy === undefined) {\n          trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n        } // If creating the internal policy succeeded sign internal variables.\n\n\n        if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n          emptyHTML = trustedTypesPolicy.createHTML('');\n        }\n      } // Prevent further manipulation of configuration.\n      // Not available in IE8, Safari 5, etc.\n\n\n      if (freeze) {\n        freeze(cfg);\n      }\n\n      CONFIG = cfg;\n    };\n\n    const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n    const HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'desc', 'title', 'annotation-xml']); // Certain elements are allowed in both SVG and HTML\n    // namespace. We need to specify them explicitly\n    // so that they don't get erroneously deleted from\n    // HTML namespace.\n\n    const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n    /* Keep track of all possible SVG and MathML tags\n     * so that we can perform the namespace checks\n     * correctly. */\n\n    const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n    const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n    /**\n     * @param  {Element} element a DOM element whose namespace is being checked\n     * @returns {boolean} Return false if the element has a\n     *  namespace that a spec-compliant parser would never\n     *  return. Return true otherwise.\n     */\n\n    const _checkValidNamespace = function _checkValidNamespace(element) {\n      let parent = getParentNode(element); // In JSDOM, if we're inside shadow DOM, then parentNode\n      // can be null. We just simulate parent in this case.\n\n      if (!parent || !parent.tagName) {\n        parent = {\n          namespaceURI: NAMESPACE,\n          tagName: 'template'\n        };\n      }\n\n      const tagName = stringToLowerCase(element.tagName);\n      const parentTagName = stringToLowerCase(parent.tagName);\n\n      if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n        return false;\n      }\n\n      if (element.namespaceURI === SVG_NAMESPACE) {\n        // The only way to switch from HTML namespace to SVG\n        // is via <svg>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'svg';\n        } // The only way to switch from MathML to SVG is via`\n        // svg if parent is either <annotation-xml> or MathML\n        // text integration points.\n\n\n        if (parent.namespaceURI === MATHML_NAMESPACE) {\n          return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n        } // We only allow elements that are defined in SVG\n        // spec. All others are disallowed in SVG namespace.\n\n\n        return Boolean(ALL_SVG_TAGS[tagName]);\n      }\n\n      if (element.namespaceURI === MATHML_NAMESPACE) {\n        // The only way to switch from HTML namespace to MathML\n        // is via <math>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'math';\n        } // The only way to switch from SVG to MathML is via\n        // <math> and HTML integration points\n\n\n        if (parent.namespaceURI === SVG_NAMESPACE) {\n          return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n        } // We only allow elements that are defined in MathML\n        // spec. All others are disallowed in MathML namespace.\n\n\n        return Boolean(ALL_MATHML_TAGS[tagName]);\n      }\n\n      if (element.namespaceURI === HTML_NAMESPACE) {\n        // The only way to switch from SVG to HTML is via\n        // HTML integration points, and from MathML to HTML\n        // is via MathML text integration points\n        if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n\n        if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        } // We disallow tags that are specific for MathML\n        // or SVG and should never appear in HTML namespace\n\n\n        return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n      } // For XHTML and XML documents that support custom namespaces\n\n\n      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n        return true;\n      } // The code should never reach this place (this means\n      // that the element somehow got namespace that is not\n      // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n      // Return false just in case.\n\n\n      return false;\n    };\n    /**\n     * _forceRemove\n     *\n     * @param  {Node} node a DOM node\n     */\n\n\n    const _forceRemove = function _forceRemove(node) {\n      arrayPush(DOMPurify.removed, {\n        element: node\n      });\n\n      try {\n        // eslint-disable-next-line unicorn/prefer-dom-node-remove\n        node.parentNode.removeChild(node);\n      } catch (_) {\n        node.remove();\n      }\n    };\n    /**\n     * _removeAttribute\n     *\n     * @param  {String} name an Attribute name\n     * @param  {Node} node a DOM node\n     */\n\n\n    const _removeAttribute = function _removeAttribute(name, node) {\n      try {\n        arrayPush(DOMPurify.removed, {\n          attribute: node.getAttributeNode(name),\n          from: node\n        });\n      } catch (_) {\n        arrayPush(DOMPurify.removed, {\n          attribute: null,\n          from: node\n        });\n      }\n\n      node.removeAttribute(name); // We void attribute values for unremovable \"is\"\" attributes\n\n      if (name === 'is' && !ALLOWED_ATTR[name]) {\n        if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n          try {\n            _forceRemove(node);\n          } catch (_) {}\n        } else {\n          try {\n            node.setAttribute(name, '');\n          } catch (_) {}\n        }\n      }\n    };\n    /**\n     * _initDocument\n     *\n     * @param  {String} dirty a string of dirty markup\n     * @return {Document} a DOM, filled with the dirty markup\n     */\n\n\n    const _initDocument = function _initDocument(dirty) {\n      /* Create a HTML document */\n      let doc = null;\n      let leadingWhitespace = null;\n\n      if (FORCE_BODY) {\n        dirty = '<remove></remove>' + dirty;\n      } else {\n        /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n        const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n        leadingWhitespace = matches && matches[0];\n      }\n\n      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n        // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n        dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n      }\n\n      const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      /*\n       * Use the DOMParser API by default, fallback later if needs be\n       * DOMParser not work for svg when has multiple root element.\n       */\n\n      if (NAMESPACE === HTML_NAMESPACE) {\n        try {\n          doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n        } catch (_) {}\n      }\n      /* Use createHTMLDocument in case DOMParser is not available */\n\n\n      if (!doc || !doc.documentElement) {\n        doc = implementation.createDocument(NAMESPACE, 'template', null);\n\n        try {\n          doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n        } catch (_) {// Syntax error if dirtyPayload is invalid xml\n        }\n      }\n\n      const body = doc.body || doc.documentElement;\n\n      if (dirty && leadingWhitespace) {\n        body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n      }\n      /* Work on whole document or just its body */\n\n\n      if (NAMESPACE === HTML_NAMESPACE) {\n        return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n      }\n\n      return WHOLE_DOCUMENT ? doc.documentElement : body;\n    };\n    /**\n     * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n     *\n     * @param  {Node} root The root element or node to start traversing on.\n     * @return {NodeIterator} The created NodeIterator\n     */\n\n\n    const _createNodeIterator = function _createNodeIterator(root) {\n      return createNodeIterator.call(root.ownerDocument || root, root, // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, null);\n    };\n    /**\n     * _isClobbered\n     *\n     * @param  {Node} elm element to check for clobbering attacks\n     * @return {Boolean} true if clobbered, false if safe\n     */\n\n\n    const _isClobbered = function _isClobbered(elm) {\n      return elm instanceof HTMLFormElement && (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function' || typeof elm.hasChildNodes !== 'function');\n    };\n    /**\n     * Checks whether the given object is a DOM node.\n     *\n     * @param  {Node} object object to check whether it's a DOM node\n     * @return {Boolean} true is object is a DOM node\n     */\n\n\n    const _isNode = function _isNode(object) {\n      return typeof Node === 'function' && object instanceof Node;\n    };\n    /**\n     * _executeHook\n     * Execute user configurable hooks\n     *\n     * @param  {String} entryPoint  Name of the hook's entry point\n     * @param  {Node} currentNode node to work on with the hook\n     * @param  {Object} data additional hook parameters\n     */\n\n\n    const _executeHook = function _executeHook(entryPoint, currentNode, data) {\n      if (!hooks[entryPoint]) {\n        return;\n      }\n\n      arrayForEach(hooks[entryPoint], hook => {\n        hook.call(DOMPurify, currentNode, data, CONFIG);\n      });\n    };\n    /**\n     * _sanitizeElements\n     *\n     * @protect nodeName\n     * @protect textContent\n     * @protect removeChild\n     *\n     * @param   {Node} currentNode to check for permission to exist\n     * @return  {Boolean} true if node was killed, false if left alive\n     */\n\n\n    const _sanitizeElements = function _sanitizeElements(currentNode) {\n      let content = null;\n      /* Execute a hook if present */\n\n      _executeHook('beforeSanitizeElements', currentNode, null);\n      /* Check if element is clobbered or can clobber */\n\n\n      if (_isClobbered(currentNode)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Now let's check the element's type and name */\n\n\n      const tagName = transformCaseFunc(currentNode.nodeName);\n      /* Execute a hook if present */\n\n      _executeHook('uponSanitizeElement', currentNode, {\n        tagName,\n        allowedTags: ALLOWED_TAGS\n      });\n      /* Detect mXSS attempts abusing namespace confusion */\n\n\n      if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Remove element if anything forbids its presence */\n\n\n      if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n        /* Check if we have a custom element to handle */\n        if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n            return false;\n          }\n\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n            return false;\n          }\n        }\n        /* Keep content except for bad-listed elements */\n\n\n        if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n          const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n          const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n          if (childNodes && parentNode) {\n            const childCount = childNodes.length;\n\n            for (let i = childCount - 1; i >= 0; --i) {\n              parentNode.insertBefore(cloneNode(childNodes[i], true), getNextSibling(currentNode));\n            }\n          }\n        }\n\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Check whether element has a valid namespace */\n\n\n      if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Make sure that older browsers don't get fallback-tag mXSS */\n\n\n      if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Sanitize element content to be template-safe */\n\n\n      if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n        /* Get the element's text content */\n        content = currentNode.textContent;\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          content = stringReplace(content, expr, ' ');\n        });\n\n        if (currentNode.textContent !== content) {\n          arrayPush(DOMPurify.removed, {\n            element: currentNode.cloneNode()\n          });\n          currentNode.textContent = content;\n        }\n      }\n      /* Execute a hook if present */\n\n\n      _executeHook('afterSanitizeElements', currentNode, null);\n\n      return false;\n    };\n    /**\n     * _isValidAttribute\n     *\n     * @param  {string} lcTag Lowercase tag name of containing element.\n     * @param  {string} lcName Lowercase attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid, otherwise false.\n     */\n    // eslint-disable-next-line complexity\n\n\n    const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n      /* Make sure attribute cannot clobber */\n      if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n        return false;\n      }\n      /* Allow valid data-* attributes: At least one character after \"-\"\n          (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n          XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n          We don't need to check the value; it's always URI safe. */\n\n\n      if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ;else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ;else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n        if ( // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) || // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ;else {\n          return false;\n        }\n        /* Check value is safe. First, is attr inert? If so, is safe */\n      } else if (URI_SAFE_ATTRIBUTES[lcName]) ;else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ;else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ;else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ;else if (value) {\n        return false;\n      } else ;\n      return true;\n    };\n    /**\n     * _isBasicCustomElement\n     * checks if at least one dash is included in tagName, and it's not the first char\n     * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n     *\n     * @param {string} tagName name of the tag of the node to sanitize\n     * @returns {boolean} Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n     */\n\n\n    const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n      return tagName !== 'annotation-xml' && tagName.indexOf('-') > 0;\n    };\n    /**\n     * _sanitizeAttributes\n     *\n     * @protect attributes\n     * @protect nodeName\n     * @protect removeAttribute\n     * @protect setAttribute\n     *\n     * @param  {Node} currentNode to sanitize\n     */\n\n\n    const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n      const {\n        attributes\n      } = currentNode;\n      /* Check if we have attributes; if not we might have a text node */\n\n      if (!attributes) {\n        return;\n      }\n\n      const hookEvent = {\n        attrName: '',\n        attrValue: '',\n        keepAttr: true,\n        allowedAttributes: ALLOWED_ATTR\n      };\n      let l = attributes.length;\n      /* Go backwards over all attributes; safely remove bad ones */\n\n      while (l--) {\n        const attr = attributes[l];\n        const {\n          name,\n          namespaceURI,\n          value: attrValue\n        } = attr;\n        const lcName = transformCaseFunc(name);\n        let value = name === 'value' ? attrValue : stringTrim(attrValue);\n        /* Execute a hook if present */\n\n        hookEvent.attrName = lcName;\n        hookEvent.attrValue = value;\n        hookEvent.keepAttr = true;\n        hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n\n        _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n\n        value = hookEvent.attrValue;\n        /* Did the hooks approve of the attribute? */\n\n        if (hookEvent.forceKeepAttr) {\n          continue;\n        }\n        /* Remove attribute */\n\n\n        _removeAttribute(name, currentNode);\n        /* Did the hooks approve of the attribute? */\n\n\n        if (!hookEvent.keepAttr) {\n          continue;\n        }\n        /* Work around a security issue in jQuery 3.0 */\n\n\n        if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n          _removeAttribute(name, currentNode);\n\n          continue;\n        }\n        /* Sanitize attribute content to be template-safe */\n\n\n        if (SAFE_FOR_TEMPLATES) {\n          arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n            value = stringReplace(value, expr, ' ');\n          });\n        }\n        /* Is `value` valid for this attribute? */\n\n\n        const lcTag = transformCaseFunc(currentNode.nodeName);\n\n        if (!_isValidAttribute(lcTag, lcName, value)) {\n          continue;\n        }\n        /* Full DOM Clobbering protection via namespace isolation,\n         * Prefix id and name attributes with `user-content-`\n         */\n\n\n        if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n          // Remove the attribute with this value\n          _removeAttribute(name, currentNode); // Prefix the value and later re-create the attribute with the sanitized value\n\n\n          value = SANITIZE_NAMED_PROPS_PREFIX + value;\n        }\n        /* Handle attributes that require Trusted Types */\n\n\n        if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n          if (namespaceURI) ;else {\n            switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n              case 'TrustedHTML':\n                {\n                  value = trustedTypesPolicy.createHTML(value);\n                  break;\n                }\n\n              case 'TrustedScriptURL':\n                {\n                  value = trustedTypesPolicy.createScriptURL(value);\n                  break;\n                }\n            }\n          }\n        }\n        /* Handle invalid data-* attribute set by try-catching it */\n\n\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n\n          arrayPop(DOMPurify.removed);\n        } catch (_) {}\n      }\n      /* Execute a hook if present */\n\n\n      _executeHook('afterSanitizeAttributes', currentNode, null);\n    };\n    /**\n     * _sanitizeShadowDOM\n     *\n     * @param  {DocumentFragment} fragment to iterate over recursively\n     */\n\n\n    const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n      let shadowNode = null;\n\n      const shadowIterator = _createNodeIterator(fragment);\n      /* Execute a hook if present */\n\n\n      _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n      while (shadowNode = shadowIterator.nextNode()) {\n        /* Execute a hook if present */\n        _executeHook('uponSanitizeShadowNode', shadowNode, null);\n        /* Sanitize tags and elements */\n\n\n        if (_sanitizeElements(shadowNode)) {\n          continue;\n        }\n        /* Deep shadow DOM detected */\n\n\n        if (shadowNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(shadowNode.content);\n        }\n        /* Check attributes, sanitize if necessary */\n\n\n        _sanitizeAttributes(shadowNode);\n      }\n      /* Execute a hook if present */\n\n\n      _executeHook('afterSanitizeShadowDOM', fragment, null);\n    };\n    /**\n     * Sanitize\n     * Public method providing core sanitation functionality\n     *\n     * @param {String|Node} dirty string or DOM node\n     * @param {Object} cfg object\n     */\n    // eslint-disable-next-line complexity\n\n\n    DOMPurify.sanitize = function (dirty) {\n      let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      let body = null;\n      let importedNode = null;\n      let currentNode = null;\n      let returnNode = null;\n      /* Make sure we have a string to sanitize.\n        DO NOT return early, as this will return the wrong type if\n        the user has requested a DOM object rather than a string */\n\n      IS_EMPTY_INPUT = !dirty;\n\n      if (IS_EMPTY_INPUT) {\n        dirty = '<!-->';\n      }\n      /* Stringify, in case dirty is an object */\n\n\n      if (typeof dirty !== 'string' && !_isNode(dirty)) {\n        if (typeof dirty.toString === 'function') {\n          dirty = dirty.toString();\n\n          if (typeof dirty !== 'string') {\n            throw typeErrorCreate('dirty is not a string, aborting');\n          }\n        } else {\n          throw typeErrorCreate('toString is not a function');\n        }\n      }\n      /* Return dirty HTML if DOMPurify cannot run */\n\n\n      if (!DOMPurify.isSupported) {\n        return dirty;\n      }\n      /* Assign config vars */\n\n\n      if (!SET_CONFIG) {\n        _parseConfig(cfg);\n      }\n      /* Clean up removed elements */\n\n\n      DOMPurify.removed = [];\n      /* Check if dirty is correctly typed for IN_PLACE */\n\n      if (typeof dirty === 'string') {\n        IN_PLACE = false;\n      }\n\n      if (IN_PLACE) {\n        /* Do some early pre-sanitization to avoid unsafe root nodes */\n        if (dirty.nodeName) {\n          const tagName = transformCaseFunc(dirty.nodeName);\n\n          if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n            throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n          }\n        }\n      } else if (dirty instanceof Node) {\n        /* If dirty is a DOM element, append to an empty document to avoid\n           elements being stripped by the parser */\n        body = _initDocument('<!---->');\n        importedNode = body.ownerDocument.importNode(dirty, true);\n\n        if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n          /* Node is already a body, use as is */\n          body = importedNode;\n        } else if (importedNode.nodeName === 'HTML') {\n          body = importedNode;\n        } else {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          body.appendChild(importedNode);\n        }\n      } else {\n        /* Exit directly if we have nothing to do */\n        if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT && // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1) {\n          return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n        }\n        /* Initialize the document to work on */\n\n\n        body = _initDocument(dirty);\n        /* Check we have a DOM node from the data */\n\n        if (!body) {\n          return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n        }\n      }\n      /* Remove first element node (ours) if FORCE_BODY is set */\n\n\n      if (body && FORCE_BODY) {\n        _forceRemove(body.firstChild);\n      }\n      /* Get node iterator */\n\n\n      const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n      /* Now start iterating over the created document */\n\n\n      while (currentNode = nodeIterator.nextNode()) {\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(currentNode)) {\n          continue;\n        }\n        /* Shadow DOM detected, sanitize it */\n\n\n        if (currentNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(currentNode.content);\n        }\n        /* Check attributes, sanitize if necessary */\n\n\n        _sanitizeAttributes(currentNode);\n      }\n      /* If we sanitized `dirty` in-place, return it. */\n\n\n      if (IN_PLACE) {\n        return dirty;\n      }\n      /* Return sanitized string or DOM */\n\n\n      if (RETURN_DOM) {\n        if (RETURN_DOM_FRAGMENT) {\n          returnNode = createDocumentFragment.call(body.ownerDocument);\n\n          while (body.firstChild) {\n            // eslint-disable-next-line unicorn/prefer-dom-node-append\n            returnNode.appendChild(body.firstChild);\n          }\n        } else {\n          returnNode = body;\n        }\n\n        if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n          /*\n            AdoptNode() is not used because internal state is not reset\n            (e.g. the past names map of a HTMLFormElement), this is safe\n            in theory but we would rather not risk another attack vector.\n            The state that is cloned by importNode() is explicitly defined\n            by the specs.\n          */\n          returnNode = importNode.call(originalDocument, returnNode, true);\n        }\n\n        return returnNode;\n      }\n\n      let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n      /* Serialize doctype if allowed */\n\n      if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n        serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n      }\n      /* Sanitize final string template-safe */\n\n\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          serializedHTML = stringReplace(serializedHTML, expr, ' ');\n        });\n      }\n\n      return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n    };\n    /**\n     * Public method to set the configuration once\n     * setConfig\n     *\n     * @param {Object} cfg configuration object\n     */\n\n\n    DOMPurify.setConfig = function () {\n      let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      _parseConfig(cfg);\n\n      SET_CONFIG = true;\n    };\n    /**\n     * Public method to remove the configuration\n     * clearConfig\n     *\n     */\n\n\n    DOMPurify.clearConfig = function () {\n      CONFIG = null;\n      SET_CONFIG = false;\n    };\n    /**\n     * Public method to check if an attribute value is valid.\n     * Uses last set config, if any. Otherwise, uses config defaults.\n     * isValidAttribute\n     *\n     * @param  {String} tag Tag name of containing element.\n     * @param  {String} attr Attribute name.\n     * @param  {String} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n     */\n\n\n    DOMPurify.isValidAttribute = function (tag, attr, value) {\n      /* Initialize shared config vars if necessary. */\n      if (!CONFIG) {\n        _parseConfig({});\n      }\n\n      const lcTag = transformCaseFunc(tag);\n      const lcName = transformCaseFunc(attr);\n      return _isValidAttribute(lcTag, lcName, value);\n    };\n    /**\n     * AddHook\n     * Public method to add DOMPurify hooks\n     *\n     * @param {String} entryPoint entry point for the hook to add\n     * @param {Function} hookFunction function to execute\n     */\n\n\n    DOMPurify.addHook = function (entryPoint, hookFunction) {\n      if (typeof hookFunction !== 'function') {\n        return;\n      }\n\n      hooks[entryPoint] = hooks[entryPoint] || [];\n      arrayPush(hooks[entryPoint], hookFunction);\n    };\n    /**\n     * RemoveHook\n     * Public method to remove a DOMPurify hook at a given entryPoint\n     * (pops it from the stack of hooks if more are present)\n     *\n     * @param {String} entryPoint entry point for the hook to remove\n     * @return {Function} removed(popped) hook\n     */\n\n\n    DOMPurify.removeHook = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        return arrayPop(hooks[entryPoint]);\n      }\n    };\n    /**\n     * RemoveHooks\n     * Public method to remove all DOMPurify hooks at a given entryPoint\n     *\n     * @param  {String} entryPoint entry point for the hooks to remove\n     */\n\n\n    DOMPurify.removeHooks = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        hooks[entryPoint] = [];\n      }\n    };\n    /**\n     * RemoveAllHooks\n     * Public method to remove all DOMPurify hooks\n     */\n\n\n    DOMPurify.removeAllHooks = function () {\n      hooks = {};\n    };\n\n    return DOMPurify;\n  }\n\n  var purify = createDOMPurify();\n  return purify;\n});","map":{"version":3,"mappings":"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","names":["entries","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","Object","freeze","seal","create","apply","construct","Reflect","x","fun","thisValue","args","Func","arrayForEach","unapply","Array","prototype","forEach","arrayPop","pop","arrayPush","push","stringToLowerCase","String","toLowerCase","stringToString","toString","stringMatch","match","stringReplace","replace","stringIndexOf","indexOf","stringTrim","trim","objectHasOwnProperty","hasOwnProperty","regExpTest","RegExp","test","typeErrorCreate","unconstruct","TypeError","func","thisArg","_len","_key","arguments","_key2","addToSet","set","array","transformCaseFunc","l","length","element","lcElement","cleanArray","index","isPropertyExist","clone","object","newObject","property","value","isArray","constructor","lookupGetter","prop","desc","get","fallbackValue","html","svg","svgFilters","svgDisallowed","mathMl","mathMlDisallowed","text","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","getGlobal","window","_createTrustedTypesPolicy","trustedTypes","purifyHostElement","createPolicy","suffix","ATTR_NAME","hasAttribute","getAttribute","policyName","createHTML","createScriptURL","scriptUrl","_","console","warn","createDOMPurify","DOMPurify","root","version","VERSION","removed","document","nodeType","isSupported","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","getNextSibling","getChildNodes","getParentNode","template","createElement","content","ownerDocument","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","hooks","createHTMLDocument","undefined","EXPRESSIONS","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","ATTRS","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","TRUSTED_TYPES_POLICY","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","tagName","namespaceURI","parentTagName","Boolean","_forceRemove","node","parentNode","removeChild","remove","_removeAttribute","name","attribute","getAttributeNode","from","removeAttribute","setAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","innerHTML","body","insertBefore","createTextNode","childNodes","call","_createNodeIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","_isClobbered","elm","nodeName","textContent","attributes","hasChildNodes","_isNode","_executeHook","entryPoint","currentNode","data","hook","_sanitizeElements","allowedTags","firstElementChild","_isBasicCustomElement","childCount","i","expr","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","attr","forceKeepAttr","getAttributeType","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","returnNode","appendChild","firstChild","nodeIterator","shadowroot","shadowrootmode","serializedHTML","outerHTML","doctype","setConfig","clearConfig","isValidAttribute","tag","addHook","hookFunction","removeHook","removeHooks","removeAllHooks"],"sources":["/Users/Koli/Desktop/capstone project/client/client/node_modules/dompurify/src/utils.js","/Users/Koli/Desktop/capstone project/client/client/node_modules/dompurify/src/tags.js","/Users/Koli/Desktop/capstone project/client/client/node_modules/dompurify/src/attrs.js","/Users/Koli/Desktop/capstone project/client/client/node_modules/dompurify/src/regexp.js","/Users/Koli/Desktop/capstone project/client/client/node_modules/dompurify/src/purify.js"],"sourcesContent":["const {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!freeze) {\n  freeze = function (x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function (x) {\n    return x;\n  };\n}\n\nif (!apply) {\n  apply = function (fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!construct) {\n  construct = function (Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param {Function} func - The function to be wrapped and called.\n * @returns {Function} A new function that calls the given function with a specified thisArg and arguments.\n */\nfunction unapply(func) {\n  return (thisArg, ...args) => apply(func, thisArg, args);\n}\n\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param {Function} func - The constructor function to be wrapped and called.\n * @returns {Function} A new function that constructs an instance of the given constructor function with the provided arguments.\n */\nfunction unconstruct(func) {\n  return (...args) => construct(func, args);\n}\n\n/**\n * Add properties to a lookup table\n *\n * @param {Object} set - The set to which elements will be added.\n * @param {Array} array - The array containing elements to be added to the set.\n * @param {Function} transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns {Object} The modified set with added elements.\n */\nfunction addToSet(set, array, transformCaseFunc = stringToLowerCase) {\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/**\n * Clean up an array to harden against CSPP\n *\n * @param {Array} array - The array to be cleaned.\n * @returns {Array} The cleaned version of the array\n */\nfunction cleanArray(array) {\n  for (let index = 0; index < array.length; index++) {\n    const isPropertyExist = objectHasOwnProperty(array, index);\n\n    if (!isPropertyExist) {\n      array[index] = null;\n    }\n  }\n\n  return array;\n}\n\n/**\n * Shallow clone an object\n *\n * @param {Object} object - The object to be cloned.\n * @returns {Object} A new object that copies the original.\n */\nfunction clone(object) {\n  const newObject = create(null);\n\n  for (const [property, value] of entries(object)) {\n    const isPropertyExist = objectHasOwnProperty(object, property);\n\n    if (isPropertyExist) {\n      if (Array.isArray(value)) {\n        newObject[property] = cleanArray(value);\n      } else if (\n        value &&\n        typeof value === 'object' &&\n        value.constructor === Object\n      ) {\n        newObject[property] = clone(value);\n      } else {\n        newObject[property] = value;\n      }\n    }\n  }\n\n  return newObject;\n}\n\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param {Object} object - The object to look up the getter function in its prototype chain.\n * @param {String} prop - The property name for which to find the getter function.\n * @returns {Function} The getter function found in the prototype chain or a fallback function.\n */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue() {\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  // Object\n  entries,\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  clone,\n  create,\n  objectHasOwnProperty,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n  addToSet,\n  // Reflect\n  unapply,\n  unconstruct,\n};\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'decorator',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'nobr',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'shadow',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n]);\n\n// SVG\nexport const svg = freeze([\n  'svg',\n  'a',\n  'altglyph',\n  'altglyphdef',\n  'altglyphitem',\n  'animatecolor',\n  'animatemotion',\n  'animatetransform',\n  'circle',\n  'clippath',\n  'defs',\n  'desc',\n  'ellipse',\n  'filter',\n  'font',\n  'g',\n  'glyph',\n  'glyphref',\n  'hkern',\n  'image',\n  'line',\n  'lineargradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialgradient',\n  'rect',\n  'stop',\n  'style',\n  'switch',\n  'symbol',\n  'text',\n  'textpath',\n  'title',\n  'tref',\n  'tspan',\n  'view',\n  'vkern',\n]);\n\nexport const svgFilters = freeze([\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n]);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nexport const svgDisallowed = freeze([\n  'animate',\n  'color-profile',\n  'cursor',\n  'discard',\n  'font-face',\n  'font-face-format',\n  'font-face-name',\n  'font-face-src',\n  'font-face-uri',\n  'foreignobject',\n  'hatch',\n  'hatchpath',\n  'mesh',\n  'meshgradient',\n  'meshpatch',\n  'meshrow',\n  'missing-glyph',\n  'script',\n  'set',\n  'solidcolor',\n  'unknown',\n  'use',\n]);\n\nexport const mathMl = freeze([\n  'math',\n  'menclose',\n  'merror',\n  'mfenced',\n  'mfrac',\n  'mglyph',\n  'mi',\n  'mlabeledtr',\n  'mmultiscripts',\n  'mn',\n  'mo',\n  'mover',\n  'mpadded',\n  'mphantom',\n  'mroot',\n  'mrow',\n  'ms',\n  'mspace',\n  'msqrt',\n  'mstyle',\n  'msub',\n  'msup',\n  'msubsup',\n  'mtable',\n  'mtd',\n  'mtext',\n  'mtr',\n  'munder',\n  'munderover',\n  'mprescripts',\n]);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nexport const mathMlDisallowed = freeze([\n  'maction',\n  'maligngroup',\n  'malignmark',\n  'mlongdiv',\n  'mscarries',\n  'mscarry',\n  'msgroup',\n  'mstack',\n  'msline',\n  'msrow',\n  'semantics',\n  'annotation',\n  'annotation-xml',\n  'mprescripts',\n  'none',\n]);\n\nexport const text = freeze(['#text']);\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'accept',\n  'action',\n  'align',\n  'alt',\n  'autocapitalize',\n  'autocomplete',\n  'autopictureinpicture',\n  'autoplay',\n  'background',\n  'bgcolor',\n  'border',\n  'capture',\n  'cellpadding',\n  'cellspacing',\n  'checked',\n  'cite',\n  'class',\n  'clear',\n  'color',\n  'cols',\n  'colspan',\n  'controls',\n  'controlslist',\n  'coords',\n  'crossorigin',\n  'datetime',\n  'decoding',\n  'default',\n  'dir',\n  'disabled',\n  'disablepictureinpicture',\n  'disableremoteplayback',\n  'download',\n  'draggable',\n  'enctype',\n  'enterkeyhint',\n  'face',\n  'for',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'href',\n  'hreflang',\n  'id',\n  'inputmode',\n  'integrity',\n  'ismap',\n  'kind',\n  'label',\n  'lang',\n  'list',\n  'loading',\n  'loop',\n  'low',\n  'max',\n  'maxlength',\n  'media',\n  'method',\n  'min',\n  'minlength',\n  'multiple',\n  'muted',\n  'name',\n  'nonce',\n  'noshade',\n  'novalidate',\n  'nowrap',\n  'open',\n  'optimum',\n  'pattern',\n  'placeholder',\n  'playsinline',\n  'poster',\n  'preload',\n  'pubdate',\n  'radiogroup',\n  'readonly',\n  'rel',\n  'required',\n  'rev',\n  'reversed',\n  'role',\n  'rows',\n  'rowspan',\n  'spellcheck',\n  'scope',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'span',\n  'srclang',\n  'start',\n  'src',\n  'srcset',\n  'step',\n  'style',\n  'summary',\n  'tabindex',\n  'title',\n  'translate',\n  'type',\n  'usemap',\n  'valign',\n  'value',\n  'width',\n  'xmlns',\n  'slot',\n]);\n\nexport const svg = freeze([\n  'accent-height',\n  'accumulate',\n  'additive',\n  'alignment-baseline',\n  'ascent',\n  'attributename',\n  'attributetype',\n  'azimuth',\n  'basefrequency',\n  'baseline-shift',\n  'begin',\n  'bias',\n  'by',\n  'class',\n  'clip',\n  'clippathunits',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'cx',\n  'cy',\n  'd',\n  'dx',\n  'dy',\n  'diffuseconstant',\n  'direction',\n  'display',\n  'divisor',\n  'dur',\n  'edgemode',\n  'elevation',\n  'end',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'filterunits',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'fx',\n  'fy',\n  'g1',\n  'g2',\n  'glyph-name',\n  'glyphref',\n  'gradientunits',\n  'gradienttransform',\n  'height',\n  'href',\n  'id',\n  'image-rendering',\n  'in',\n  'in2',\n  'k',\n  'k1',\n  'k2',\n  'k3',\n  'k4',\n  'kerning',\n  'keypoints',\n  'keysplines',\n  'keytimes',\n  'lang',\n  'lengthadjust',\n  'letter-spacing',\n  'kernelmatrix',\n  'kernelunitlength',\n  'lighting-color',\n  'local',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'markerheight',\n  'markerunits',\n  'markerwidth',\n  'maskcontentunits',\n  'maskunits',\n  'max',\n  'mask',\n  'media',\n  'method',\n  'mode',\n  'min',\n  'name',\n  'numoctaves',\n  'offset',\n  'operator',\n  'opacity',\n  'order',\n  'orient',\n  'orientation',\n  'origin',\n  'overflow',\n  'paint-order',\n  'path',\n  'pathlength',\n  'patterncontentunits',\n  'patterntransform',\n  'patternunits',\n  'points',\n  'preservealpha',\n  'preserveaspectratio',\n  'primitiveunits',\n  'r',\n  'rx',\n  'ry',\n  'radius',\n  'refx',\n  'refy',\n  'repeatcount',\n  'repeatdur',\n  'restart',\n  'result',\n  'rotate',\n  'scale',\n  'seed',\n  'shape-rendering',\n  'specularconstant',\n  'specularexponent',\n  'spreadmethod',\n  'startoffset',\n  'stddeviation',\n  'stitchtiles',\n  'stop-color',\n  'stop-opacity',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke',\n  'stroke-width',\n  'style',\n  'surfacescale',\n  'systemlanguage',\n  'tabindex',\n  'targetx',\n  'targety',\n  'transform',\n  'transform-origin',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'textlength',\n  'type',\n  'u1',\n  'u2',\n  'unicode',\n  'values',\n  'viewbox',\n  'visibility',\n  'version',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'width',\n  'word-spacing',\n  'wrap',\n  'writing-mode',\n  'xchannelselector',\n  'ychannelselector',\n  'x',\n  'x1',\n  'x2',\n  'xmlns',\n  'y',\n  'y1',\n  'y2',\n  'z',\n  'zoomandpan',\n]);\n\nexport const mathMl = freeze([\n  'accent',\n  'accentunder',\n  'align',\n  'bevelled',\n  'close',\n  'columnsalign',\n  'columnlines',\n  'columnspan',\n  'denomalign',\n  'depth',\n  'dir',\n  'display',\n  'displaystyle',\n  'encoding',\n  'fence',\n  'frame',\n  'height',\n  'href',\n  'id',\n  'largeop',\n  'length',\n  'linethickness',\n  'lspace',\n  'lquote',\n  'mathbackground',\n  'mathcolor',\n  'mathsize',\n  'mathvariant',\n  'maxsize',\n  'minsize',\n  'movablelimits',\n  'notation',\n  'numalign',\n  'open',\n  'rowalign',\n  'rowlines',\n  'rowspacing',\n  'rowspan',\n  'rspace',\n  'rquote',\n  'scriptlevel',\n  'scriptminsize',\n  'scriptsizemultiplier',\n  'selection',\n  'separator',\n  'separators',\n  'stretchy',\n  'subscriptshift',\n  'supscriptshift',\n  'symmetric',\n  'voffset',\n  'width',\n  'xmlns',\n]);\n\nexport const xml = freeze([\n  'xlink:href',\n  'xml:id',\n  'xlink:title',\n  'xml:space',\n  'xmlns:xlink',\n]);\n","import { seal } from './utils.js';\n\n// eslint-disable-next-line unicorn/better-regex\nexport const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nexport const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nexport const TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\nexport const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nexport const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nexport const IS_ALLOWED_URI = seal(\n  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nexport const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nexport const ATTR_WHITESPACE = seal(\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nexport const DOCTYPE_NAME = seal(/^html$/i);\n","import * as TAGS from './tags.js';\nimport * as ATTRS from './attrs.js';\nimport * as EXPRESSIONS from './regexp.js';\nimport {\n  addToSet,\n  clone,\n  entries,\n  freeze,\n  arrayForEach,\n  arrayPop,\n  arrayPush,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringIndexOf,\n  stringTrim,\n  regExpTest,\n  typeErrorCreate,\n  lookupGetter,\n  create,\n  objectHasOwnProperty,\n} from './utils.js';\n\nconst getGlobal = function () {\n  return typeof window === 'undefined' ? null : window;\n};\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {HTMLScriptElement} purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return {TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\nconst _createTrustedTypesPolicy = function (trustedTypes, purifyHostElement) {\n  if (\n    typeof trustedTypes !== 'object' ||\n    typeof trustedTypes.createPolicy !== 'function'\n  ) {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      },\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn(\n      'TrustedTypes policy ' + policyName + ' could not be created.'\n    );\n    return null;\n  }\n};\n\nfunction createDOMPurify(window = getGlobal()) {\n  const DOMPurify = (root) => createDOMPurify(root);\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = VERSION;\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  let { document } = window;\n\n  const originalDocument = document;\n  const currentScript = originalDocument.currentScript;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes,\n  } = window;\n\n  const ElementPrototype = Element.prototype;\n\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName,\n  } = document;\n  const { importNode } = originalDocument;\n\n  let hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported =\n    typeof entries === 'function' &&\n    typeof getParentNode === 'function' &&\n    implementation &&\n    implementation.createHTMLDocument !== undefined;\n\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n  } = EXPRESSIONS;\n\n  let { IS_ALLOWED_URI } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [\n    ...TAGS.html,\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.mathMl,\n    ...TAGS.text,\n  ]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [\n    ...ATTRS.html,\n    ...ATTRS.svg,\n    ...ATTRS.mathMl,\n    ...ATTRS.xml,\n  ]);\n\n  /*\n   * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(\n    create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false,\n      },\n    })\n  );\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, [\n    'annotation-xml',\n    'audio',\n    'colgroup',\n    'desc',\n    'foreignobject',\n    'head',\n    'iframe',\n    'math',\n    'mi',\n    'mn',\n    'mo',\n    'ms',\n    'mtext',\n    'noembed',\n    'noframes',\n    'noscript',\n    'plaintext',\n    'script',\n    'style',\n    'svg',\n    'template',\n    'thead',\n    'title',\n    'video',\n    'xmp',\n  ]);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, [\n    'audio',\n    'video',\n    'img',\n    'source',\n    'image',\n    'track',\n  ]);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\n    'alt',\n    'class',\n    'for',\n    'id',\n    'label',\n    'name',\n    'pattern',\n    'placeholder',\n    'role',\n    'summary',\n    'title',\n    'value',\n    'style',\n    'xmlns',\n  ]);\n\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet(\n    {},\n    [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE],\n    stringToString\n  );\n\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc = null;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  const isRegexOrFunction = function (testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function (cfg = {}) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1\n        ? DEFAULT_PARSER_MEDIA_TYPE\n        : cfg.PARSER_MEDIA_TYPE;\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc =\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml'\n        ? stringToString\n        : stringToLowerCase;\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS')\n      ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc)\n      : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR')\n      ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc)\n      : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES')\n      ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString)\n      : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR')\n      ? addToSet(\n          clone(DEFAULT_URI_SAFE_ATTRIBUTES), // eslint-disable-line indent\n          cfg.ADD_URI_SAFE_ATTR, // eslint-disable-line indent\n          transformCaseFunc // eslint-disable-line indent\n        ) // eslint-disable-line indent\n      : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS')\n      ? addToSet(\n          clone(DEFAULT_DATA_URI_TAGS), // eslint-disable-line indent\n          cfg.ADD_DATA_URI_TAGS, // eslint-disable-line indent\n          transformCaseFunc // eslint-disable-line indent\n        ) // eslint-disable-line indent\n      : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS')\n      ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc)\n      : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS')\n      ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc)\n      : {};\n    FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR')\n      ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc)\n      : {};\n    USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES')\n      ? cfg.USE_PROFILES\n      : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI = cfg.ALLOWED_URI_REGEXP || EXPRESSIONS.IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements ===\n        'boolean'\n    ) {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements =\n        cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, TAGS.text);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, TAGS.html);\n        addToSet(ALLOWED_ATTR, ATTRS.html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svgFilters);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, TAGS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate(\n          'TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.'\n        );\n      }\n\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate(\n          'TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.'\n        );\n      }\n\n      // Overwrite existing TrustedTypes policy.\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n\n      // Sign local variables required by `sanitize`.\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(\n          trustedTypes,\n          currentScript\n        );\n      }\n\n      // If creating the internal policy succeeded sign internal variables.\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\n    'mi',\n    'mo',\n    'mn',\n    'ms',\n    'mtext',\n  ]);\n\n  const HTML_INTEGRATION_POINTS = addToSet({}, [\n    'foreignobject',\n    'desc',\n    'title',\n    'annotation-xml',\n  ]);\n\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, [\n    'title',\n    'style',\n    'font',\n    'a',\n    'script',\n  ]);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, [\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.svgDisallowed,\n  ]);\n  const ALL_MATHML_TAGS = addToSet({}, [\n    ...TAGS.mathMl,\n    ...TAGS.mathMlDisallowed,\n  ]);\n\n  /**\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function (element) {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template',\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return (\n          tagName === 'svg' &&\n          (parentTagName === 'annotation-xml' ||\n            MATHML_TEXT_INTEGRATION_POINTS[parentTagName])\n        );\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (\n        parent.namespaceURI === SVG_NAMESPACE &&\n        !HTML_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      if (\n        parent.namespaceURI === MATHML_NAMESPACE &&\n        !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return (\n        !ALL_MATHML_TAGS[tagName] &&\n        (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName])\n      );\n    }\n\n    // For XHTML and XML documents that support custom namespaces\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      ALLOWED_NAMESPACES[element.namespaceURI]\n    ) {\n      return true;\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  const _forceRemove = function (node) {\n    arrayPush(DOMPurify.removed, { element: node });\n\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      node.remove();\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  const _removeAttribute = function (name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node,\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node,\n      });\n    }\n\n    node.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\"\" attributes\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  const _initDocument = function (dirty) {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      NAMESPACE === HTML_NAMESPACE\n    ) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty =\n        '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' +\n        dirty +\n        '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy\n      ? trustedTypesPolicy.createHTML(dirty)\n      : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT\n          ? emptyHTML\n          : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(\n        document.createTextNode(leadingWhitespace),\n        body.childNodes[0] || null\n      );\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(\n        doc,\n        WHOLE_DOCUMENT ? 'html' : 'body'\n      )[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param  {Node} root The root element or node to start traversing on.\n   * @return {NodeIterator} The created NodeIterator\n   */\n  const _createNodeIterator = function (root) {\n    return createNodeIterator.call(\n      root.ownerDocument || root,\n      root,\n      // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT,\n      null\n    );\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  const _isClobbered = function (elm) {\n    return (\n      elm instanceof HTMLFormElement &&\n      (typeof elm.nodeName !== 'string' ||\n        typeof elm.textContent !== 'string' ||\n        typeof elm.removeChild !== 'function' ||\n        !(elm.attributes instanceof NamedNodeMap) ||\n        typeof elm.removeAttribute !== 'function' ||\n        typeof elm.setAttribute !== 'function' ||\n        typeof elm.namespaceURI !== 'string' ||\n        typeof elm.insertBefore !== 'function' ||\n        typeof elm.hasChildNodes !== 'function')\n    );\n  };\n\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param  {Node} object object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  const _isNode = function (object) {\n    return typeof Node === 'function' && object instanceof Node;\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  const _executeHook = function (entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], (hook) => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function (currentNode) {\n    let content = null;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS,\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (\n      currentNode.hasChildNodes() &&\n      !_isNode(currentNode.firstElementChild) &&\n      regExpTest(/<[/\\w]/g, currentNode.innerHTML) &&\n      regExpTest(/<[/\\w]/g, currentNode.textContent)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n          regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)\n        ) {\n          return false;\n        }\n\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)\n        ) {\n          return false;\n        }\n      }\n\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(\n              cloneNode(childNodes[i], true),\n              getNextSibling(currentNode)\n            );\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if (\n      (tagName === 'noscript' ||\n        tagName === 'noembed' ||\n        tagName === 'noframes') &&\n      regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], (expr) => {\n        content = stringReplace(content, expr, ' ');\n      });\n\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function (lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (\n      SANITIZE_DOM &&\n      (lcName === 'id' || lcName === 'name') &&\n      (value in document || value in formElement)\n    ) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (\n      ALLOW_DATA_ATTR &&\n      !FORBID_ATTR[lcName] &&\n      regExpTest(DATA_ATTR, lcName)\n    ) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        (_isBasicCustomElement(lcTag) &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag))) &&\n          ((CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName)) ||\n            (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)))) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        (lcName === 'is' &&\n          CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))))\n      ) {\n        // If user has supplied a regexp or function in CUSTOM_ELEMENT_HANDLING.tagNameCheck, we need to also allow derived custom elements using the same tagName test.\n        // Additionally, we need to allow attributes passing the CUSTOM_ELEMENT_HANDLING.attributeNameCheck user has configured, as custom elements can define these at their own discretion.\n      } else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (\n      regExpTest(IS_ALLOWED_URI, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if (\n      (lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') &&\n      lcTag !== 'script' &&\n      stringIndexOf(value, 'data:') === 0 &&\n      DATA_URI_TAGS[lcTag]\n    ) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (\n      ALLOW_UNKNOWN_PROTOCOLS &&\n      !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Check for binary attributes */\n    } else if (value) {\n      return false;\n    } else {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    }\n\n    return true;\n  };\n\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param {string} tagName name of the tag of the node to sanitize\n   * @returns {boolean} Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n  const _isBasicCustomElement = function (tagName) {\n    return tagName !== 'annotation-xml' && tagName.indexOf('-') > 0;\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  const _sanitizeAttributes = function (currentNode) {\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    const { attributes } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n    };\n    let l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      const attr = attributes[l];\n      const { name, namespaceURI, value: attrValue } = attr;\n      const lcName = transformCaseFunc(name);\n\n      let value = name === 'value' ? attrValue : stringTrim(attrValue);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], (expr) => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n\n      /* Handle attributes that require Trusted Types */\n      if (\n        trustedTypesPolicy &&\n        typeof trustedTypes === 'object' &&\n        typeof trustedTypes.getAttributeType === 'function'\n      ) {\n        if (namespaceURI) {\n          /* Namespaces are not yet supported, see https://bugs.chromium.org/p/chromium/issues/detail?id=1305293 */\n        } else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML': {\n              value = trustedTypesPolicy.createHTML(value);\n              break;\n            }\n\n            case 'TrustedScriptURL': {\n              value = trustedTypesPolicy.createScriptURL(value);\n              break;\n            }\n\n            default: {\n              break;\n            }\n          }\n        }\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function (fragment) {\n    let shadowNode = null;\n    const shadowIterator = _createNodeIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while ((shadowNode = shadowIterator.nextNode())) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} cfg object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg = {}) {\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate(\n            'root node is forbidden and cannot be sanitized in-place'\n          );\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (\n        !RETURN_DOM &&\n        !SAFE_FOR_TEMPLATES &&\n        !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1\n      ) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n          ? trustedTypesPolicy.createHTML(dirty)\n          : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while ((currentNode = nodeIterator.nextNode())) {\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n    }\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Serialize doctype if allowed */\n    if (\n      WHOLE_DOCUMENT &&\n      ALLOWED_TAGS['!doctype'] &&\n      body.ownerDocument &&\n      body.ownerDocument.doctype &&\n      body.ownerDocument.doctype.name &&\n      regExpTest(EXPRESSIONS.DOCTYPE_NAME, body.ownerDocument.doctype.name)\n    ) {\n      serializedHTML =\n        '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], (expr) => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML(serializedHTML)\n      : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg = {}) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {String} tag Tag name of containing element.\n   * @param  {String} attr Attribute name.\n   * @param  {String} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   * @return {Function} removed(popped) hook\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      return arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nexport default createDOMPurify();\n"]},"metadata":{},"sourceType":"script"}